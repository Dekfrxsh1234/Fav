from nextcord.ext import commands
from nextcord import Interaction, slash_command, Embed
from db.database import (
    add_to_queue, find_match, create_game, get_game_state,
    is_in_queue, is_in_game
)
from game.views import XOGameView
from datetime import datetime

class XO(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @slash_command(name="xomatch", description="‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏° XO")
    async def xomatch(self, interaction: Interaction):
        print("üîπ START: /xomatch called by", interaction.user)
        await interaction.response.defer(ephemeral=True)

        user = interaction.user
        user_id = user.id

        if await is_in_queue(user_id):
            embed = Embed(
                title="‚õî ‡∏Ñ‡∏∏‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏Ñ‡∏¥‡∏ß‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß",
                description="‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ `/cancel` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏Ñ‡∏¥‡∏ß",
                color=0xFF5733
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
            return

        if await is_in_game(user_id):
            embed = Embed(
                title="‚ö†Ô∏è ‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡∏ö",
                description="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡∏à‡∏ö‡∏Å‡πà‡∏≠‡∏ô ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á `/forfeit` ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏≠‡∏°‡πÅ‡∏û‡πâ",
                color=0xFFC300
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
            return

        await add_to_queue(user_id, str(user), interaction.guild.id, interaction.channel.id)
        print("‚úÖ Added to queue:", user_id)

        opponent = await find_match(user_id)
        if opponent:
            print("‚úÖ Found opponent:", opponent)
            game_id, _ = await create_game(user_id, opponent)
            print("‚úÖ Game created:", game_id)

            state = await get_game_state(game_id)
            if not state:
                embed = Embed(
                    title="‚ùó ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏Å‡∏°‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                    description="‡πÇ‡∏õ‡∏£‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á ‡∏´‡∏£‡∏∑‡∏≠‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö",
                    color=0xE74C3C
                )
                await interaction.followup.send(embed=embed, ephemeral=True)
                return

            view = XOGameView(
                game_id=game_id,
                player_x=state["player_x"],
                player_o=state["player_o"],
                board=state["board"],
                turn=state["turn"],
                start_time=state["start_time"]
            )

            try:
                user1 = await self.bot.fetch_user(state["player_x"])
                user2 = await self.bot.fetch_user(state["player_o"])
                print("üì§ Sending DM to", user1, "and", user2)

                msg1 = await user1.send(content=view.current_turn_display(), view=view)
                msg2 = await user2.send(content=view.current_turn_display(), view=view)
                view.messages = [msg1, msg2]

                embed_dm = Embed(
                    title="üéÆ ‡πÄ‡∏Å‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏•‡πâ‡∏ß!",
                    description=f"""‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô <@{state['player_x']}> ‡∏û‡∏ö‡∏Å‡∏±‡∏ö <@{state['player_o']}>
‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á DM ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏±‡πâ‡∏á‡∏Ñ‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö!""",
                    color=0x2ECC71
                )

                await interaction.channel.send(
                    content=f"<@{state['player_x']}> <@{state['player_o']}>",
                    embed=embed_dm
                )

                await interaction.followup.send(embed=Embed(
                    description="‚úÖ ‡πÄ‡∏Å‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÅ‡∏•‡πâ‡∏ß! ‡πÄ‡∏ä‡πá‡∏Ñ DM ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô",
                    color=0x2ECC71
                ), ephemeral=True)

            except Exception as e:
                print("‚ùå Failed to send DM:", e)
                await interaction.followup.send(embed=Embed(
                    title="‚ùó ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á DM ‡πÑ‡∏î‡πâ",
                    description="‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå",
                    color=0xE74C3C
                ), ephemeral=True)
        else:
            embed = Embed(
                title="‚åõ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à",
                description="""‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏£‡∏≠‡∏ú‡∏π‡πâ‡πÄ‡∏•‡πà‡∏ô‡∏Ñ‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏°
‚è≥ ‡πÇ‡∏õ‡∏£‡∏î‡πÄ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° DM ‡∏à‡∏≤‡∏Å‡∏ö‡∏≠‡∏ó ‡πÅ‡∏•‡∏∞‡∏£‡∏≠‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥""",
                color=0x3498DB
            )
            embed.set_footer(text=f"‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡πÄ‡∏°‡∏∑‡πà‡∏≠: {datetime.utcnow().strftime('%Y-%m-%d %H:%M UTC')}")
            await interaction.followup.send(embed=embed, ephemeral=True)

def setup(bot):
    bot.add_cog(XO(bot))
